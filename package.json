{
  "name": "lucaverse-hub-extension",
  "version": "2.0.0",
  "description": "Enhanced Productivity Hub - React TypeScript Architecture",
  "private": true,
  "type": "module",
  "main": "dist/electron/main.js",
  "scripts": {
    "dev": "npx kill-port 5666 --silent && vite --open || vite --open",
    "dev:dashboard": "vite --open /dashboard",
    "dev:theme": "vite --open /theme-demo",
    "dev:animations": "vite --open /animation-demo",
    "dev:extension": "vite --mode extension",
    "dev:electron": "vite --mode electron",
    "build": "tsc && vite build",
    "build:web": "tsc && vite build --mode web",
    "build:extension": "tsc && vite build --mode extension",
    "build:electron": "tsc && vite build --mode electron",
    "preview": "vite preview",
    "type-check": "tsc --noEmit",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,css,md}\"",
    "prepare": "husky",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:panels": "jest --testPathPattern=panelOperations",
    "test:dragdrop": "jest --testPathPattern=dragDrop",
    "test:resize": "jest --testPathPattern=resize",
    "test:persistence": "jest --testPathPattern=statePersistence",
    "test:platform": "jest --testPathPattern=platformAPI",
    "test:integration:jest": "jest --testPathPattern=masterTestSuite",
    "test:visual": "jest --testPathPattern=visual",
    "test:performance": "jest --testPathPattern=performance",
    "test:extension": "jest --testPathPattern=extension",
    "test:devtools": "jest --testPathPattern=devToolsTest",
    "test:migration": "node -e \"import('./src/utils/__tests__/migrationTest.js').then(m => m.runMigrationTests())\"",
    "test:features": "npm run dev & echo 'Open http://localhost:5173 and run window.__runTests__() in console'",
    "test:all": "node -e \"import('./src/utils/testRunner.js').then(m => m.runAllTests())\"",
    "test:manual": "node -e \"import('./src/utils/testRunner.js').then(m => m.runManualTestingGuidance())\"",
    "test:consolidated": "node --loader ts-node/esm scripts/test-validation.ts",
    "test:unified": "npm run dev & echo 'Open http://localhost:5173 and navigate to Unified Test Suite'",
    "test:panel-system": "npm run dev & echo 'Open http://localhost:5173 and navigate to Panel System Tests'",
    "test:interactions": "npm run dev & echo 'Open http://localhost:5173 and navigate to Interaction Tests'",
    "validate:tests": "node --loader ts-node/esm scripts/test-validation.ts",
    "analyze:bundle": "node scripts/bundleAnalyzer.js",
    "analyze:web": "npm run build:web && rollup-plugin-visualizer --filename dist/web/bundle-analysis.html --open",
    "analyze:extension": "npm run build:extension && rollup-plugin-visualizer --filename dist/extension/bundle-analysis.html --open",
    "analyze:electron": "npm run build:electron && rollup-plugin-visualizer --filename dist/electron/bundle-analysis.html --open",
    "build:all": "npm run build:web && npm run build:extension && npm run build:electron",
    "validate:performance": "node scripts/validatePerformanceBudgets.js",
    "validate:budgets": "npm run build:all && npm run validate:performance",
    "validate:optimization": "node scripts/validateOptimization.js",
    "validate:all": "npm run build:all && npm run validate:optimization && npm run validate:performance",
    "validate": "npx tsx scripts/validation/cli.ts --mode=development",
    "validate:test": "node scripts/validation/test-simple.js",
    "validate:quick": "tsx scripts/validation/cli.ts --scope=quick",
    "validate:ci": "tsx scripts/validation/cli.ts --mode=ci",
    "validate:fix": "tsx scripts/validation/cli.ts --fix",
    "validate:report": "tsx scripts/validation/cli.ts --report",
    "validate:dev": "tsx scripts/validation/cli.ts --mode=development",
    "validate:dashboard": "tsx scripts/validation/cli.ts --scope=dashboard",
    "test:integration": "npm run validate:dev && npm run dev",
    "health": "tsx scripts/validation/runtime/health-monitor.ts",
    "architecture": "tsx scripts/validation/static/architecture-validator.ts",
    "theme": "tsx scripts/validation/static/theme-validator.ts",
    "guidelines": "tsx scripts/validation/static/guideline-checker.ts",
    "test:component-states": "tsx scripts/validation/visual/component-tester.ts",
    "test:visual-regression": "tsx scripts/validation/visual/visual-regression.ts",
    "update:visual-baselines": "tsx scripts/validation/visual/visual-regression.ts --update-baselines",
    "test:journeys": "tsx scripts/validation/visual/user-journey.ts",
    "debug:ui-state": "tsx scripts/validation/visual/ui-serializer.ts --claude-format",
    "legacy:dev": "node dev-server.js",
    "legacy:serve": "npx http-server . -p 3000 -c-1 --cors",
    "electron:dev": "concurrently \"npm run dev:electron\" \"wait-on http://localhost:5173 && cross-env NODE_ENV=development electron dist/electron/main.js\"",
    "electron:build": "npm run build:electron && electron-builder",
    "electron:build:win": "npm run build:electron && electron-builder --win",
    "electron:build:mac": "npm run build:electron && electron-builder --mac",
    "electron:build:linux": "npm run build:electron && electron-builder --linux",
    "electron:dist": "npm run build:electron && electron-builder --publish=never",
    "electron:dist:win": "npm run build:electron && electron-builder --win --publish=never",
    "electron:dist:mac": "npm run build:electron && electron-builder --mac --publish=never",
    "electron:dist:linux": "npm run build:electron && electron-builder --linux --publish=never",
    "electron:pack": "npm run build:electron && electron-builder --dir",
    "electron:start": "cross-env NODE_ENV=development electron dist/electron/main.js"
  },
  "dependencies": {
    "@dnd-kit/accessibility": "^3.1.1",
    "@dnd-kit/core": "^6.1.0",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^8.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@sentry/integrations": "^7.114.0",
    "@sentry/react": "^9.35.0",
    "@sentry/tracing": "^7.120.3",
    "@types/react-router-dom": "^5.3.3",
    "clsx": "^2.1.1",
    "commander": "^9.4.1",
    "framer-motion": "^10.16.4",
    "glob": "^10.3.10",
    "nanoid": "^5.0.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hotkeys-hook": "^4.4.1",
    "react-resizable-panels": "^0.0.55",
    "react-router-dom": "^7.6.3",
    "tailwind-merge": "^3.3.1",
    "zustand": "^4.4.7"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{css,md}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@crxjs/vite-plugin": "^2.0.0-beta.21",
    "@redux-devtools/extension": "^3.3.0",
    "@tailwindcss/forms": "^0.5.7",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/chrome": "^0.0.251",
    "@types/electron": "^1.4.38",
    "@types/jest": "^30.0.0",
    "@types/node": "^20.19.4",
    "@types/react": "^18.2.43",
    "@types/react-dom": "^18.2.17",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@vitejs/plugin-react": "^4.2.1",
    "autoprefixer": "^10.4.21",
    "concurrently": "^9.2.0",
    "cross-env": "^7.0.3",
    "electron": "^37.2.0",
    "electron-builder": "^26.0.12",
    "electron-debug": "^4.1.0",
    "electron-devtools-installer": "^4.0.0",
    "electron-is-dev": "^3.0.1",
    "eslint": "^8.55.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.5",
    "http-server": "^14.1.1",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^30.0.4",
    "jest-environment-jsdom": "^30.0.4",
    "kill-port": "^2.0.1",
    "lint-staged": "^16.1.2",
    "pixelmatch": "^7.1.0",
    "playwright": "^1.53.2",
    "pngjs": "^7.0.0",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "rollup-plugin-visualizer": "^6.0.3",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.4.0",
    "tsx": "^4.20.3",
    "typescript": "^5.2.2",
    "vite": "^7.0.2",
    "wait-on": "^8.0.3",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "keywords": [
    "productivity",
    "browser-extension",
    "react",
    "typescript",
    "vite",
    "modular",
    "glassmorphism",
    "dashboard"
  ],
  "author": "Lucaverse",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/lucaverse/hub-extension"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "browserslist": [
    "last 2 Chrome versions",
    "last 2 Firefox versions",
    "last 2 Safari versions",
    "last 2 Edge versions"
  ],
  "build": {
    "appId": "com.lucaverse.hub",
    "productName": "Lucaverse Hub",
    "copyright": "Copyright Â© 2025 Lucaverse",
    "directories": {
      "output": "release",
      "buildResources": "assets"
    },
    "files": [
      "dist/electron/**/*",
      "assets/**/*",
      "node_modules/**/*",
      "package.json"
    ],
    "extraMetadata": {
      "main": "dist/electron/main.js"
    },
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        {
          "target": "default",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "icon": "assets/icons/icon.icns",
      "entitlementsInherit": "assets/entitlements.mac.inherit.plist",
      "entitlements": "assets/entitlements.mac.plist",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "notarize": {
        "teamId": "TEAM_ID"
      }
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "msi",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "portable",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/icons/icon.ico",
      "publisherName": "Lucaverse",
      "verifyUpdateCodeSignature": false,
      "requestedExecutionLevel": "asInvoker"
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "rpm",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "snap",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/icons/",
      "category": "Office",
      "description": "Enhanced productivity dashboard with AI chat, smart bookmarks, and task management",
      "desktop": {
        "StartupNotify": "true",
        "Encoding": "UTF-8",
        "MimeType": "x-scheme-handler/lucaverse"
      }
    },
    "nsis": {
      "oneClick": false,
      "perMachine": false,
      "allowToChangeInstallationDirectory": true,
      "deleteAppDataOnUninstall": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "shortcutName": "Lucaverse Hub",
      "include": "assets/installer.nsh",
      "warningsAsErrors": false
    },
    "msi": {
      "oneClick": false,
      "perMachine": false,
      "runAfterFinish": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "menuCategory": "Productivity"
    },
    "portable": {
      "artifactName": "${productName}-${version}-portable.${ext}"
    },
    "appImage": {
      "license": "LICENSE",
      "category": "Office"
    },
    "snap": {
      "summary": "Enhanced productivity dashboard",
      "grade": "stable",
      "confinement": "strict",
      "plugs": [
        "default",
        "home",
        "network",
        "network-bind",
        "removable-media"
      ]
    },
    "publish": {
      "provider": "generic",
      "url": "https://releases.lucaverse.com",
      "channel": "latest"
    },
    "afterSign": "scripts/notarize.js",
    "compression": "maximum",
    "removePackageScripts": false,
    "nodeGypRebuild": false,
    "buildDependenciesFromSource": false,
    "npmRebuild": false
  }
}
